<div class="
  post-preview
  flex flex-col md:flex-row @(ImageOnRight ? "md:flex-row-reverse" : "")
  gap-6
  bg-inherit
  border border-neutral-400
  rounded-xl p-6
  transition-all duration-300 ease-in-out
  hover:shadow-[0_8px_20px_rgba(0,240,181,0.12)] hover:-translate-y-1
">
    @if(ShowImage && !string.IsNullOrWhiteSpace(ThumbnailUrl))
    {
        <div class="flex-shrink-0 flex justify-center md:justify-start">
            <img src="@ThumbnailUrl" alt="Post thumbnail" @onerror="OnImageError"
                 class="
        w-32 h-32 mx-auto
        md:w-24 md:h-24 md:mx-0
        object-cover rounded-md
        border border-neutral-200 dark:border-white/10
         " />

        </div>
    }
    <div class="flex flex-col justify-between flex-1 text-inherit w-full">
        <div>
            <a href="@Url" class="block hover:text-accent transition-colors">
                <h2 class="font-serif font-bold text-2xl mb-2 text-inherit">
                    @Title
                </h2>
                <p class="opacity-90 text-inherit">
                    @Description
                </p>
            </a>
        </div>
        <div class="flex flex-wrap justify-between items-end mt-4 text-sm text-inherit">
            <div class="flex gap-2 flex-wrap">
                @if(Tags?.Any() == true)
                {
                    @foreach(var tag in Tags)
                    {
                        <span class="bg-accent text-inherit px-3 py-1 rounded-full">
                            @tag
                        </span>
                    }
                }
            </div>
            <span class="opacity-70">
                @PublishDate.ToString("MMM dd, yyyy")
            </span>
        </div>
    </div>
</div>


@code {
    [Parameter] public string Title { get; set; } = string.Empty;
    [Parameter] public string Description { get; set; } = string.Empty;
    [Parameter] public string Url { get; set; } = "#";
    [Parameter] public string? ThumbnailUrl { get; set; }
    [Parameter] public List<string>? Tags { get; set; }
    [Parameter] public DateTime PublishDate { get; set; } = DateTime.UtcNow;
    [Parameter] public bool ImageOnRight { get; set; } = true;

    private bool ShowImage = true;

    private void OnImageError()
    {
        ShowImage = false;
        StateHasChanged();
    }
}
